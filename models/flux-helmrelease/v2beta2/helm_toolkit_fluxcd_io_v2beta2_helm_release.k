"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema HelmRelease:
    r"""
    HelmRelease is the Schema for the helmreleases API

    Attributes
    ----------
    apiVersion : str, default is "helm.toolkit.fluxcd.io/v2beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HelmRelease", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : HelmToolkitFluxcdIoV2beta2HelmReleaseSpec, default is Undefined, optional
        spec
    status : HelmToolkitFluxcdIoV2beta2HelmReleaseStatus, default is Undefined, optional
        status
    """


    apiVersion: "helm.toolkit.fluxcd.io/v2beta2" = "helm.toolkit.fluxcd.io/v2beta2"

    kind: "HelmRelease" = "HelmRelease"

    metadata?: v1.ObjectMeta

    spec?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpec

    status?: HelmToolkitFluxcdIoV2beta2HelmReleaseStatus


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpec:
    r"""
    HelmReleaseSpec defines the desired state of a Helm release.

    Attributes
    ----------
    chart : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChart, default is Undefined, optional
        chart
    chartRef : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartRef, default is Undefined, optional
        chart ref
    dependsOn : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDependsOnItems0], default is Undefined, optional
        DependsOn may contain a meta.NamespacedObjectReference slice with
        references to HelmRelease resources that must be ready before this HelmRelease
        can be reconciled.
    driftDetection : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetection, default is Undefined, optional
        drift detection
    install : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstall, default is Undefined, optional
        install
    interval : str, default is Undefined, required
        Interval at which to reconcile the Helm release.
    kubeConfig : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfig, default is Undefined, optional
        kube config
    maxHistory : int, default is Undefined, optional
        MaxHistory is the number of revisions saved by Helm for this HelmRelease.
        Use '0' for an unlimited number of revisions; defaults to '5'.
    persistentClient : bool, default is Undefined, optional
        PersistentClient tells the controller to use a persistent Kubernetes
        client for this release. When enabled, the client will be reused for the
        duration of the reconciliation, instead of being created and destroyed
        for each (step of a) Helm action.

        This can improve performance, but may cause issues with some Helm charts
        that for example do create Custom Resource Definitions during installation
        outside Helm's CRD lifecycle hooks, which are then not observed to be
        available by e.g. post-install hooks.

        If not set, it defaults to true.
    postRenderers : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0], default is Undefined, optional
        PostRenderers holds an array of Helm PostRenderers, which will be applied in order
        of their definition.
    releaseName : str, default is Undefined, optional
        ReleaseName used for the Helm release. Defaults to a composition of
        '[TargetNamespace-]Name'.
    rollback : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecRollback, default is Undefined, optional
        rollback
    serviceAccountName : str, default is Undefined, optional
        The name of the Kubernetes service account to impersonate
        when reconciling this HelmRelease.
    storageNamespace : str, default is Undefined, optional
        StorageNamespace used for the Helm storage.
        Defaults to the namespace of the HelmRelease.
    suspend : bool, default is Undefined, optional
        Suspend tells the controller to suspend reconciliation for this HelmRelease,
        it does not apply to already started reconciliations. Defaults to false.
    targetNamespace : str, default is Undefined, optional
        TargetNamespace to target when performing operations for the HelmRelease.
        Defaults to the namespace of the HelmRelease.
    test : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTest, default is Undefined, optional
        test
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like Jobs
        for hooks) during the performance of a Helm action. Defaults to '5m0s'.
    uninstall : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUninstall, default is Undefined, optional
        uninstall
    upgrade : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgrade, default is Undefined, optional
        upgrade
    values : any, default is Undefined, optional
        Values holds the values for this Helm release.
    valuesFrom : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecValuesFromItems0], default is Undefined, optional
        ValuesFrom holds references to resources containing Helm values for this HelmRelease,
        and information about how they should be merged.
    """


    chart?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChart

    chartRef?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartRef

    dependsOn?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDependsOnItems0]

    driftDetection?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetection

    install?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstall

    interval: str

    kubeConfig?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfig

    maxHistory?: int

    persistentClient?: bool

    postRenderers?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0]

    releaseName?: str

    rollback?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecRollback

    serviceAccountName?: str

    storageNamespace?: str

    suspend?: bool

    targetNamespace?: str

    test?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTest

    timeout?: str

    uninstall?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUninstall

    upgrade?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgrade

    values?: any

    valuesFrom?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecValuesFromItems0]


    check:
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$")
        len(releaseName) <= 53 if releaseName
        len(releaseName) >= 1 if releaseName
        len(serviceAccountName) <= 253 if serviceAccountName
        len(serviceAccountName) >= 1 if serviceAccountName
        len(storageNamespace) <= 63 if storageNamespace
        len(storageNamespace) >= 1 if storageNamespace
        len(targetNamespace) <= 63 if targetNamespace
        len(targetNamespace) >= 1 if targetNamespace
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChart:
    r"""
    Chart defines the template of the v1beta2.HelmChart that should be created
    for this HelmRelease.

    Attributes
    ----------
    metadata : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartMetadata, default is Undefined, optional
        metadata
    spec : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpec, default is Undefined, required
        spec
    """


    metadata?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartMetadata

    spec: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpec


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartMetadata:
    r"""
    ObjectMeta holds the template for metadata like labels and annotations.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    """


    annotations?: {str:str}

    labels?: {str:str}


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartRef:
    r"""
    ChartRef holds a reference to a source controller resource containing the
    Helm chart artifact.

    Note: this field is provisional to the v2 API, and not actively used
    by v2beta2 HelmReleases.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion of the referent.
    kind : str, default is Undefined, required
        Kind of the referent.
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, defaults to the namespace of the Kubernetes
        resource object that contains the reference.
    """


    apiVersion?: str

    kind: "OCIRepository" | "HelmChart"

    name: str

    namespace?: str


    check:
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpec:
    r"""
    Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.

    Attributes
    ----------
    chart : str, default is Undefined, required
        The name or path the Helm chart is available at in the SourceRef.
    ignoreMissingValuesFiles : bool, default is Undefined, optional
        IgnoreMissingValuesFiles controls whether to silently ignore missing values files rather than failing.
    interval : str, default is Undefined, optional
        Interval at which to check the v1.Source for updates. Defaults to
        'HelmReleaseSpec.Interval'.
    reconcileStrategy : str, default is "ChartVersion", optional
        Determines what enables the creation of a new artifact. Valid values are
        ('ChartVersion', 'Revision').
        See the documentation of the values for an explanation on their behavior.
        Defaults to ChartVersion when omitted.
    sourceRef : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecSourceRef, default is Undefined, required
        source ref
    valuesFile : str, default is Undefined, optional
        Alternative values file to use as the default chart values, expected to
        be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
        for backwards compatibility the file defined here is merged before the
        ValuesFiles items. Ignored when omitted.
    valuesFiles : [str], default is Undefined, optional
        Alternative list of values files to use as the chart values (values.yaml
        is not included by default), expected to be a relative path in the SourceRef.
        Values files are merged in the order of this list with the last file overriding
        the first. Ignored when omitted.
    verify : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerify, default is Undefined, optional
        verify
    version : str, default is "*", optional
        Version semver expression, ignored for charts from v1beta2.GitRepository and
        v1beta2.Bucket sources. Defaults to latest when omitted.
    """


    chart: str

    ignoreMissingValuesFiles?: bool

    interval?: str

    reconcileStrategy?: "ChartVersion" | "Revision" = "ChartVersion"

    sourceRef: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecSourceRef

    valuesFile?: str

    valuesFiles?: [str]

    verify?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerify

    version?: str = "*"


    check:
        len(chart) <= 2048
        len(chart) >= 1
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if interval


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecSourceRef:
    r"""
    The name and namespace of the v1.Source the chart is available at.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion of the referent.
    kind : str, default is Undefined, required
        Kind of the referent.
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent.
    """


    apiVersion?: str

    kind: "HelmRepository" | "GitRepository" | "Bucket"

    name: str

    namespace?: str


    check:
        len(name) <= 253
        len(name) >= 1
        len(namespace) <= 63 if namespace
        len(namespace) >= 1 if namespace


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerify:
    r"""
    Verify contains the secret name containing the trusted public keys
    used to verify the signature and specifies which provider to use to check
    whether OCI image is authentic.
    This field is only supported for OCI sources.
    Chart dependencies, which are not bundled in the umbrella chart artifact,
    are not verified.

    Attributes
    ----------
    provider : str, default is "cosign", required
        Provider specifies the technology used to sign the OCI Helm chart.
    secretRef : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerifySecretRef, default is Undefined, optional
        secret ref
    """


    provider: "cosign" | "notation" = "cosign"

    secretRef?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerifySecretRef


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecChartSpecVerifySecretRef:
    r"""
    SecretRef specifies the Kubernetes Secret containing the
    trusted public keys.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDependsOnItems0:
    r"""
    NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
    namespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    namespace : str, default is Undefined, optional
        Namespace of the referent, when not specified it acts as LocalObjectReference.
    """


    name: str

    namespace?: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetection:
    r"""
    DriftDetection holds the configuration for detecting and handling
    differences between the manifest in the Helm storage and the resources
    currently existing in the cluster.

    Attributes
    ----------
    ignore : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0], default is Undefined, optional
        Ignore contains a list of rules for specifying which changes to ignore
        during diffing.
    mode : str, default is Undefined, optional
        Mode defines how differences should be handled between the Helm manifest
        and the manifest currently applied to the cluster.
        If not explicitly set, it defaults to DiffModeDisabled.
    """


    ignore?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0]

    mode?: "enabled" | "warn" | "disabled"


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0:
    r"""
    IgnoreRule defines a rule to selectively disregard specific changes during
    the drift detection process.

    Attributes
    ----------
    paths : [str], default is Undefined, required
        Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
        consideration in a Kubernetes object.
    target : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0Target, default is Undefined, optional
        target
    """


    paths: [str]

    target?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0Target


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecDriftDetectionIgnoreItems0Target:
    r"""
    Target is a selector for specifying Kubernetes objects to which this
    rule applies.
    If Target is not set, the Paths will be ignored for all Kubernetes
    objects within the manifest of the Helm release.

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        AnnotationSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource annotations.
    group : str, default is Undefined, optional
        Group is the API group to select resources from.
        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    kind : str, default is Undefined, optional
        Kind of the API Group to select resources from.
        Together with Group and Version it is capable of unambiguously
        identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    labelSelector : str, default is Undefined, optional
        LabelSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource labels.
    name : str, default is Undefined, optional
        Name to match resources with.
    namespace : str, default is Undefined, optional
        Namespace to select resources from.
    version : str, default is Undefined, optional
        Version of the API Group to select resources from.
        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    """


    annotationSelector?: str

    group?: str

    kind?: str

    labelSelector?: str

    name?: str

    namespace?: str

    version?: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstall:
    r"""
    Install holds the configuration for Helm install actions for this HelmRelease.

    Attributes
    ----------
    crds : str, default is Undefined, optional
        CRDs upgrade CRDs from the Helm Chart's crds directory according
        to the CRD upgrade policy provided here. Valid values are `Skip`,
        `Create` or `CreateReplace`. Default is `Create` and if omitted
        CRDs are installed but not updated.

        Skip: do neither install nor replace (update) any CRDs.

        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
        but not deleted.

        By default, CRDs are applied (installed) during Helm install action.
        With this option users can opt in to CRD replace existing CRDs on Helm
        install actions, which is not (yet) natively supported by Helm.
        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
    createNamespace : bool, default is Undefined, optional
        CreateNamespace tells the Helm install action to create the
        HelmReleaseSpec.TargetNamespace if it does not exist yet.
        On uninstall, the namespace will not be garbage collected.
    disableHooks : bool, default is Undefined, optional
        DisableHooks prevents hooks from running during the Helm install action.
    disableOpenAPIValidation : bool, default is Undefined, optional
        DisableOpenAPIValidation prevents the Helm install action from validating
        rendered templates against the Kubernetes OpenAPI Schema.
    disableWait : bool, default is Undefined, optional
        DisableWait disables the waiting for resources to be ready after a Helm
        install has been performed.
    disableWaitForJobs : bool, default is Undefined, optional
        DisableWaitForJobs disables waiting for jobs to complete after a Helm
        install has been performed.
    remediation : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstallRemediation, default is Undefined, optional
        remediation
    replace : bool, default is Undefined, optional
        Replace tells the Helm install action to re-use the 'ReleaseName', but only
        if that name is a deleted release which remains in the history.
    skipCRDs : bool, default is Undefined, optional
        SkipCRDs tells the Helm install action to not install any CRDs. By default,
        CRDs are installed if not already present.

        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like
        Jobs for hooks) during the performance of a Helm install action. Defaults to
        'HelmReleaseSpec.Timeout'.
    """


    crds?: "Skip" | "Create" | "CreateReplace"

    createNamespace?: bool

    disableHooks?: bool

    disableOpenAPIValidation?: bool

    disableWait?: bool

    disableWaitForJobs?: bool

    remediation?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstallRemediation

    replace?: bool

    skipCRDs?: bool

    timeout?: str


    check:
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecInstallRemediation:
    r"""
    Remediation holds the remediation configuration for when the Helm install
    action for the HelmRelease fails. The default is to not perform any action.

    Attributes
    ----------
    ignoreTestFailures : bool, default is Undefined, optional
        IgnoreTestFailures tells the controller to skip remediation when the Helm
        tests are run after an install action but fail. Defaults to
        'Test.IgnoreFailures'.
    remediateLastFailure : bool, default is Undefined, optional
        RemediateLastFailure tells the controller to remediate the last failure, when
        no retries remain. Defaults to 'false'.
    retries : int, default is Undefined, optional
        Retries is the number of retries that should be attempted on failures before
        bailing. Remediation, using an uninstall, is performed between each attempt.
        Defaults to '0', a negative integer equals to unlimited retries.
    """


    ignoreTestFailures?: bool

    remediateLastFailure?: bool

    retries?: int


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfig:
    r"""
    KubeConfig for reconciling the HelmRelease on a remote cluster.
    When used in combination with HelmReleaseSpec.ServiceAccountName,
    forces the controller to act on behalf of that Service Account at the
    target cluster.
    If the --default-service-account flag is set, its value will be used as
    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
    is empty.

    Attributes
    ----------
    configMapRef : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigConfigMapRef, default is Undefined, optional
        config map ref
    secretRef : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigSecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigConfigMapRef

    secretRef?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigSecretRef


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigConfigMapRef:
    r"""
    ConfigMapRef holds an optional name of a ConfigMap that contains
    the following keys:

    - `provider`: the provider to use. One of `aws`, `azure`, `gcp`, or
       `generic`. Required.
    - `cluster`: the fully qualified resource name of the Kubernetes
       cluster in the cloud provider API. Not used by the `generic`
       provider. Required when one of `address` or `ca.crt` is not set.
    - `address`: the address of the Kubernetes API server. Required
       for `generic`. For the other providers, if not specified, the
       first address in the cluster resource will be used, and if
       specified, it must match one of the addresses in the cluster
       resource.
       If audiences is not set, will be used as the audience for the
       `generic` provider.
    - `ca.crt`: the optional PEM-encoded CA certificate for the
       Kubernetes API server. If not set, the controller will use the
       CA certificate from the cluster resource.
    - `audiences`: the optional audiences as a list of
       line-break-separated strings for the Kubernetes ServiceAccount
       token. Defaults to the `address` for the `generic` provider, or
       to specific values for the other providers depending on the
       provider.
    -  `serviceAccountName`: the optional name of the Kubernetes
       ServiceAccount in the same namespace that should be used
       for authentication. If not specified, the controller
       ServiceAccount will be used.

    Mutually exclusive with SecretRef.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecKubeConfigSecretRef:
    r"""
    SecretRef holds an optional name of a secret that contains a key with
    the kubeconfig file as the value. If no key is set, the key will default
    to 'value'. Mutually exclusive with ConfigMapRef.
    It is recommended that the kubeconfig is self-contained, and the secret
    is regularly updated if credentials such as a cloud-access-token expire.
    Cloud specific `cmd-path` auth helpers will not function without adding
    binaries and credentials to the Pod that is responsible for reconciling
    Kubernetes resources. Supported only for the generic provider.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key in the Secret, when not specified an implementation-specific default key is used.
    name : str, default is Undefined, required
        Name of the Secret.
    """


    key?: str

    name: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0:
    r"""
    PostRenderer contains a Helm PostRenderer specification.

    Attributes
    ----------
    kustomize : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0Kustomize, default is Undefined, optional
        kustomize
    """


    kustomize?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0Kustomize


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0Kustomize:
    r"""
    Kustomization to apply as PostRenderer.

    Attributes
    ----------
    images : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizeImagesItems0], default is Undefined, optional
        Images is a list of (image name, new name, new tag or digest)
        for changing image names, tags or digests. This can also be achieved with a
        patch, but this operator is simpler to specify.
    patches : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0], default is Undefined, optional
        Strategic merge and JSON patches, defined as inline YAML objects,
        capable of targeting objects based on kind, label and annotation selectors.
    patchesJson6902 : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0], default is Undefined, optional
        JSON 6902 patches, defined as inline YAML objects.

        Deprecated: use Patches instead.
    patchesStrategicMerge : [any], default is Undefined, optional
        Strategic merge patches, defined as inline YAML objects.

        Deprecated: use Patches instead.
    """


    images?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizeImagesItems0]

    patches?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0]

    patchesJson6902?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0]

    patchesStrategicMerge?: [any]


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizeImagesItems0:
    r"""
    Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.

    Attributes
    ----------
    digest : str, default is Undefined, optional
        Digest is the value used to replace the original image tag.
        If digest is present NewTag value is ignored.
    name : str, default is Undefined, required
        Name is a tag-less image name.
    newName : str, default is Undefined, optional
        NewName is the value used to replace the original name.
    newTag : str, default is Undefined, optional
        NewTag is the value used to replace the original tag.
    """


    digest?: str

    name: str

    newName?: str

    newTag?: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0:
    r"""
    Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
    be applied to.

    Attributes
    ----------
    patch : str, default is Undefined, required
        Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
        an array of operation objects.
    target : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0Target, default is Undefined, optional
        target
    """


    patch: str

    target?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0Target


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesItems0Target:
    r"""
    Target points to the resources that the patch document should be applied to.

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        AnnotationSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource annotations.
    group : str, default is Undefined, optional
        Group is the API group to select resources from.
        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    kind : str, default is Undefined, optional
        Kind of the API Group to select resources from.
        Together with Group and Version it is capable of unambiguously
        identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    labelSelector : str, default is Undefined, optional
        LabelSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource labels.
    name : str, default is Undefined, optional
        Name to match resources with.
    namespace : str, default is Undefined, optional
        Namespace to select resources from.
    version : str, default is Undefined, optional
        Version of the API Group to select resources from.
        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    """


    annotationSelector?: str

    group?: str

    kind?: str

    labelSelector?: str

    name?: str

    namespace?: str

    version?: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0:
    r"""
    JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.

    Attributes
    ----------
    patch : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0PatchItems0], default is Undefined, required
        Patch contains the JSON6902 patch document with an array of operation objects.
    target : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0Target, default is Undefined, required
        target
    """


    patch: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0PatchItems0]

    target: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0Target


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0PatchItems0:
    r"""
    JSON6902 is a JSON6902 operation object.
    https://datatracker.ietf.org/doc/html/rfc6902#section-4

    Attributes
    ----------
    from : str, default is Undefined, optional
        From contains a JSON-pointer value that references a location within the target document where the operation is
        performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
    op : str, default is Undefined, required
        Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
        "test".
        https://datatracker.ietf.org/doc/html/rfc6902#section-4
    path : str, default is Undefined, required
        Path contains the JSON-pointer value that references a location within the target document where the operation
        is performed. The meaning of the value depends on the value of Op.
    value : any, default is Undefined, optional
        Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
        account by all operations.
    """


    from?: str

    op: "test" | "remove" | "add" | "replace" | "move" | "copy"

    path: str

    value?: any


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecPostRenderersItems0KustomizePatchesJson6902Items0Target:
    r"""
    Target points to the resources that the patch document should be applied to.

    Attributes
    ----------
    annotationSelector : str, default is Undefined, optional
        AnnotationSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource annotations.
    group : str, default is Undefined, optional
        Group is the API group to select resources from.
        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    kind : str, default is Undefined, optional
        Kind of the API Group to select resources from.
        Together with Group and Version it is capable of unambiguously
        identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    labelSelector : str, default is Undefined, optional
        LabelSelector is a string that follows the label selection expression
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
        It matches with the resource labels.
    name : str, default is Undefined, optional
        Name to match resources with.
    namespace : str, default is Undefined, optional
        Namespace to select resources from.
    version : str, default is Undefined, optional
        Version of the API Group to select resources from.
        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
    """


    annotationSelector?: str

    group?: str

    kind?: str

    labelSelector?: str

    name?: str

    namespace?: str

    version?: str


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecRollback:
    r"""
    Rollback holds the configuration for Helm rollback actions for this HelmRelease.

    Attributes
    ----------
    cleanupOnFail : bool, default is Undefined, optional
        CleanupOnFail allows deletion of new resources created during the Helm
        rollback action when it fails.
    disableHooks : bool, default is Undefined, optional
        DisableHooks prevents hooks from running during the Helm rollback action.
    disableWait : bool, default is Undefined, optional
        DisableWait disables the waiting for resources to be ready after a Helm
        rollback has been performed.
    disableWaitForJobs : bool, default is Undefined, optional
        DisableWaitForJobs disables waiting for jobs to complete after a Helm
        rollback has been performed.
    force : bool, default is Undefined, optional
        Force forces resource updates through a replacement strategy.
    recreate : bool, default is Undefined, optional
        Recreate performs pod restarts for the resource if applicable.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like
        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
        'HelmReleaseSpec.Timeout'.
    """


    cleanupOnFail?: bool

    disableHooks?: bool

    disableWait?: bool

    disableWaitForJobs?: bool

    force?: bool

    recreate?: bool

    timeout?: str


    check:
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTest:
    r"""
    Test holds the configuration for Helm test actions for this HelmRelease.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Enable enables Helm test actions for this HelmRelease after an Helm install
        or upgrade action has been performed.
    filters : [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTestFiltersItems0], default is Undefined, optional
        Filters is a list of tests to run or exclude from running.
    ignoreFailures : bool, default is Undefined, optional
        IgnoreFailures tells the controller to skip remediation when the Helm tests
        are run but fail. Can be overwritten for tests run after install or upgrade
        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation during
        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
    """


    enable?: bool

    filters?: [HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTestFiltersItems0]

    ignoreFailures?: bool

    timeout?: str


    check:
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecTestFiltersItems0:
    r"""
    Filter holds the configuration for individual Helm test filters.

    Attributes
    ----------
    exclude : bool, default is Undefined, optional
        Exclude specifies whether the named test should be excluded.
    name : str, default is Undefined, required
        Name is the name of the test.
    """


    exclude?: bool

    name: str


    check:
        len(name) <= 253
        len(name) >= 1


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUninstall:
    r"""
    Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.

    Attributes
    ----------
    deletionPropagation : str, default is "background", optional
        DeletionPropagation specifies the deletion propagation policy when
        a Helm uninstall is performed.
    disableHooks : bool, default is Undefined, optional
        DisableHooks prevents hooks from running during the Helm rollback action.
    disableWait : bool, default is Undefined, optional
        DisableWait disables waiting for all the resources to be deleted after
        a Helm uninstall is performed.
    keepHistory : bool, default is Undefined, optional
        KeepHistory tells Helm to remove all associated resources and mark the
        release as deleted, but retain the release history.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like
        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
        to 'HelmReleaseSpec.Timeout'.
    """


    deletionPropagation?: "background" | "foreground" | "orphan" = "background"

    disableHooks?: bool

    disableWait?: bool

    keepHistory?: bool

    timeout?: str


    check:
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgrade:
    r"""
    Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.

    Attributes
    ----------
    cleanupOnFail : bool, default is Undefined, optional
        CleanupOnFail allows deletion of new resources created during the Helm
        upgrade action when it fails.
    crds : str, default is Undefined, optional
        CRDs upgrade CRDs from the Helm Chart's crds directory according
        to the CRD upgrade policy provided here. Valid values are `Skip`,
        `Create` or `CreateReplace`. Default is `Skip` and if omitted
        CRDs are neither installed nor upgraded.

        Skip: do neither install nor replace (update) any CRDs.

        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
        but not deleted.

        By default, CRDs are not applied during Helm upgrade action. With this
        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
    disableHooks : bool, default is Undefined, optional
        DisableHooks prevents hooks from running during the Helm upgrade action.
    disableOpenAPIValidation : bool, default is Undefined, optional
        DisableOpenAPIValidation prevents the Helm upgrade action from validating
        rendered templates against the Kubernetes OpenAPI Schema.
    disableWait : bool, default is Undefined, optional
        DisableWait disables the waiting for resources to be ready after a Helm
        upgrade has been performed.
    disableWaitForJobs : bool, default is Undefined, optional
        DisableWaitForJobs disables waiting for jobs to complete after a Helm
        upgrade has been performed.
    force : bool, default is Undefined, optional
        Force forces resource updates through a replacement strategy.
    preserveValues : bool, default is Undefined, optional
        PreserveValues will make Helm reuse the last release's values and merge in
        overrides from 'Values'. Setting this flag makes the HelmRelease
        non-declarative.
    remediation : HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgradeRemediation, default is Undefined, optional
        remediation
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like
        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
        'HelmReleaseSpec.Timeout'.
    """


    cleanupOnFail?: bool

    crds?: "Skip" | "Create" | "CreateReplace"

    disableHooks?: bool

    disableOpenAPIValidation?: bool

    disableWait?: bool

    disableWaitForJobs?: bool

    force?: bool

    preserveValues?: bool

    remediation?: HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgradeRemediation

    timeout?: str


    check:
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if timeout


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecUpgradeRemediation:
    r"""
    Remediation holds the remediation configuration for when the Helm upgrade
    action for the HelmRelease fails. The default is to not perform any action.

    Attributes
    ----------
    ignoreTestFailures : bool, default is Undefined, optional
        IgnoreTestFailures tells the controller to skip remediation when the Helm
        tests are run after an upgrade action but fail.
        Defaults to 'Test.IgnoreFailures'.
    remediateLastFailure : bool, default is Undefined, optional
        RemediateLastFailure tells the controller to remediate the last failure, when
        no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
    retries : int, default is Undefined, optional
        Retries is the number of retries that should be attempted on failures before
        bailing. Remediation, using 'Strategy', is performed between each attempt.
        Defaults to '0', a negative integer equals to unlimited retries.
    strategy : str, default is Undefined, optional
        Strategy to use for failure remediation. Defaults to 'rollback'.
    """


    ignoreTestFailures?: bool

    remediateLastFailure?: bool

    retries?: int

    strategy?: "rollback" | "uninstall"


schema HelmToolkitFluxcdIoV2beta2HelmReleaseSpecValuesFromItems0:
    r"""
    ValuesReference contains a reference to a resource containing Helm values,
    and optionally the key they can be found at.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the values referent, valid values are ('Secret', 'ConfigMap').
    name : str, default is Undefined, required
        Name of the values referent. Should reside in the same namespace as the
        referring resource.
    optional : bool, default is Undefined, optional
        Optional marks this ValuesReference as optional. When set, a not found error
        for the values reference is ignored, but any ValuesKey, TargetPath or
        transient error will still result in a reconciliation failure.
    targetPath : str, default is Undefined, optional
        TargetPath is the YAML dot notation path the value should be merged at. When
        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
        which results in the values getting merged at the root.
    valuesKey : str, default is Undefined, optional
        ValuesKey is the data key where the values.yaml or a specific value can be
        found at. Defaults to 'values.yaml'.
    """


    kind: "Secret" | "ConfigMap"

    name: str

    optional?: bool

    targetPath?: str

    valuesKey?: str


    check:
        len(name) <= 253
        len(name) >= 1
        len(targetPath) <= 250 if targetPath
        _regex_match(str(targetPath), r"^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$") if targetPath
        len(valuesKey) <= 253 if valuesKey
        _regex_match(str(valuesKey), r"^[\-._a-zA-Z0-9]+$") if valuesKey


schema HelmToolkitFluxcdIoV2beta2HelmReleaseStatus:
    r"""
    HelmReleaseStatus defines the observed state of a HelmRelease.

    Attributes
    ----------
    conditions : [HelmToolkitFluxcdIoV2beta2HelmReleaseStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the HelmRelease.
    failures : int, default is Undefined, optional
        Failures is the reconciliation failure count against the latest desired
        state. It is reset after a successful reconciliation.
    helmChart : str, default is Undefined, optional
        HelmChart is the namespaced name of the HelmChart resource created by
        the controller for the HelmRelease.
    history : [HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0], default is Undefined, optional
        History holds the history of Helm releases performed for this HelmRelease
        up to the last successfully completed release.
    installFailures : int, default is Undefined, optional
        InstallFailures is the install failure count against the latest desired
        state. It is reset after a successful reconciliation.
    lastAppliedRevision : str, default is Undefined, optional
        LastAppliedRevision is the revision of the last successfully applied
        source.

        Deprecated: the revision can now be found in the History.
    lastAttemptedConfigDigest : str, default is Undefined, optional
        LastAttemptedConfigDigest is the digest for the config (better known as
        "values") of the last reconciliation attempt.
    lastAttemptedGeneration : int, default is Undefined, optional
        LastAttemptedGeneration is the last generation the controller attempted
        to reconcile.
    lastAttemptedReleaseAction : str, default is Undefined, optional
        LastAttemptedReleaseAction is the last release action performed for this
        HelmRelease. It is used to determine the active remediation strategy.
    lastAttemptedRevision : str, default is Undefined, optional
        LastAttemptedRevision is the Source revision of the last reconciliation
        attempt. For OCIRepository  sources, the 12 first characters of the digest are
        appended to the chart version e.g. "1.2.3+1234567890ab".
    lastAttemptedRevisionDigest : str, default is Undefined, optional
        LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
        This is only set for OCIRepository sources.
    lastAttemptedValuesChecksum : str, default is Undefined, optional
        LastAttemptedValuesChecksum is the SHA1 checksum for the values of the last
        reconciliation attempt.

        Deprecated: Use LastAttemptedConfigDigest instead.
    lastHandledForceAt : str, default is Undefined, optional
        LastHandledForceAt holds the value of the most recent force request
        value, so a change of the annotation value can be detected.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    lastHandledResetAt : str, default is Undefined, optional
        LastHandledResetAt holds the value of the most recent reset request
        value, so a change of the annotation value can be detected.
    lastReleaseRevision : int, default is Undefined, optional
        LastReleaseRevision is the revision of the last successful Helm release.

        Deprecated: Use History instead.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation.
    observedPostRenderersDigest : str, default is Undefined, optional
        ObservedPostRenderersDigest is the digest for the post-renderers of
        the last successful reconciliation attempt.
    storageNamespace : str, default is Undefined, optional
        StorageNamespace is the namespace of the Helm release storage for the
        current release.
    upgradeFailures : int, default is Undefined, optional
        UpgradeFailures is the upgrade failure count against the latest desired
        state. It is reset after a successful reconciliation.
    """


    conditions?: [HelmToolkitFluxcdIoV2beta2HelmReleaseStatusConditionsItems0]

    failures?: int

    helmChart?: str

    history?: [HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0]

    installFailures?: int

    lastAppliedRevision?: str

    lastAttemptedConfigDigest?: str

    lastAttemptedGeneration?: int

    lastAttemptedReleaseAction?: "install" | "upgrade"

    lastAttemptedRevision?: str

    lastAttemptedRevisionDigest?: str

    lastAttemptedValuesChecksum?: str

    lastHandledForceAt?: str

    lastHandledReconcileAt?: str

    lastHandledResetAt?: str

    lastReleaseRevision?: int

    observedGeneration?: int

    observedPostRenderersDigest?: str

    storageNamespace?: str

    upgradeFailures?: int


    check:
        len(storageNamespace) <= 63 if storageNamespace
        len(storageNamespace) >= 1 if storageNamespace


schema HelmToolkitFluxcdIoV2beta2HelmReleaseStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0:
    r"""
    Snapshot captures a point-in-time copy of the status information for a Helm release,
    as managed by the controller.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion is the API version of the Snapshot.
        Provisional: when the calculation method of the Digest field is changed,
        this field will be used to distinguish between the old and new methods.
    appVersion : str, default is Undefined, optional
        AppVersion is the chart app version of the release object in storage.
    chartName : str, default is Undefined, required
        ChartName is the chart name of the release object in storage.
    chartVersion : str, default is Undefined, required
        ChartVersion is the chart version of the release object in
        storage.
    configDigest : str, default is Undefined, required
        ConfigDigest is the checksum of the config (better known as
        "values") of the release object in storage.
        It has the format of `<algo>:<checksum>`.
    deleted : str, default is Undefined, optional
        Deleted is when the release was deleted.
    digest : str, default is Undefined, required
        Digest is the checksum of the release object in storage.
        It has the format of `<algo>:<checksum>`.
    firstDeployed : str, default is Undefined, required
        FirstDeployed is when the release was first deployed.
    lastDeployed : str, default is Undefined, required
        LastDeployed is when the release was last deployed.
    name : str, default is Undefined, required
        Name is the name of the release.
    namespace : str, default is Undefined, required
        Namespace is the namespace the release is deployed to.
    ociDigest : str, default is Undefined, optional
        OCIDigest is the digest of the OCI artifact associated with the release.
    status : str, default is Undefined, required
        Status is the current state of the release.
    testHooks : {str:HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0TestHooksAnon}, default is Undefined, optional
        TestHooks is the list of test hooks for the release as observed to be
        run by the controller.
    version : int, default is Undefined, required
        Version is the version of the release object in storage.
    """


    apiVersion?: str

    appVersion?: str

    chartName: str

    chartVersion: str

    configDigest: str

    deleted?: str

    digest: str

    firstDeployed: str

    lastDeployed: str

    name: str

    namespace: str

    ociDigest?: str

    status: str

    testHooks?: {str:HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0TestHooksAnon}

    version: int


schema HelmToolkitFluxcdIoV2beta2HelmReleaseStatusHistoryItems0TestHooksAnon:
    r"""
    TestHookStatus holds the status information for a test hook as observed
    to be run by the controller.

    Attributes
    ----------
    lastCompleted : str, default is Undefined, optional
        LastCompleted is the time the test hook last completed.
    lastStarted : str, default is Undefined, optional
        LastStarted is the time the test hook was last started.
    phase : str, default is Undefined, optional
        Phase the test hook was observed to be in.
    """


    lastCompleted?: str

    lastStarted?: str

    phase?: str
