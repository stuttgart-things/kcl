"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema GitRepository:
    r"""
    GitRepository is the Schema for the gitrepositories API.

    Attributes
    ----------
    apiVersion : str, default is "source.toolkit.fluxcd.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GitRepository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourceToolkitFluxcdIoV1beta2GitRepositorySpec, default is Undefined, optional
        spec
    status : SourceToolkitFluxcdIoV1beta2GitRepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "source.toolkit.fluxcd.io/v1beta2" = "source.toolkit.fluxcd.io/v1beta2"

    kind: "GitRepository" = "GitRepository"

    metadata?: v1.ObjectMeta

    spec?: SourceToolkitFluxcdIoV1beta2GitRepositorySpec

    status?: SourceToolkitFluxcdIoV1beta2GitRepositoryStatus


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpec:
    r"""
    GitRepositorySpec specifies the required configuration to produce an
    Artifact for a Git repository.

    Attributes
    ----------
    accessFrom : SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFrom, default is Undefined, optional
        access from
    gitImplementation : str, default is "go-git", optional
        GitImplementation specifies which Git client library implementation to
        use. Defaults to 'go-git', valid values are ('go-git', 'libgit2').
        Deprecated: gitImplementation is deprecated now that 'go-git' is the
        only supported implementation.
    ignore : str, default is Undefined, optional
        Ignore overrides the set of excluded patterns in the .sourceignore format
        (which is the same as .gitignore). If not provided, a default will be used,
        consult the documentation for your version to find out what those are.
    include : [SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0], default is Undefined, optional
        Include specifies a list of GitRepository resources which Artifacts
        should be included in the Artifact produced for this GitRepository.
    interval : str, default is Undefined, required
        Interval at which to check the GitRepository for updates.
    recurseSubmodules : bool, default is Undefined, optional
        RecurseSubmodules enables the initialization of all submodules within
        the GitRepository as cloned from the URL, using their default settings.
    ref : SourceToolkitFluxcdIoV1beta2GitRepositorySpecRef, default is Undefined, optional
        ref
    secretRef : SourceToolkitFluxcdIoV1beta2GitRepositorySpecSecretRef, default is Undefined, optional
        secret ref
    suspend : bool, default is Undefined, optional
        Suspend tells the controller to suspend the reconciliation of this
        GitRepository.
    timeout : str, default is "60s", optional
        Timeout for Git operations like cloning, defaults to 60s.
    url : str, default is Undefined, required
        URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
    verify : SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerify, default is Undefined, optional
        verify
    """


    accessFrom?: SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFrom

    gitImplementation?: "go-git" | "libgit2" = "go-git"

    ignore?: str

    include?: [SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0]

    interval: str

    recurseSubmodules?: bool

    ref?: SourceToolkitFluxcdIoV1beta2GitRepositorySpecRef

    secretRef?: SourceToolkitFluxcdIoV1beta2GitRepositorySpecSecretRef

    suspend?: bool

    timeout?: str = "60s"

    url: str

    verify?: SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerify


    check:
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$")
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m))+$") if timeout
        _regex_match(str(url), r"^(http|https|ssh)://.*$")


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFrom:
    r"""
    AccessFrom specifies an Access Control List for allowing cross-namespace
    references to this object.
    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092

    Attributes
    ----------
    namespaceSelectors : [SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFromNamespaceSelectorsItems0], default is Undefined, required
        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
        Items in this list are evaluated using a logical OR operation.
    """


    namespaceSelectors: [SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFromNamespaceSelectorsItems0]


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecAccessFromNamespaceSelectorsItems0:
    r"""
    NamespaceSelector selects the namespaces to which this ACL applies.
    An empty map of MatchLabels matches all namespaces in a cluster.

    Attributes
    ----------
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchLabels?: {str:str}


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0:
    r"""
    GitRepositoryInclude specifies a local reference to a GitRepository which
    Artifact (sub-)contents must be included, and where they should be placed.

    Attributes
    ----------
    fromPath : str, default is Undefined, optional
        FromPath specifies the path to copy contents from, defaults to the root
        of the Artifact.
    repository : SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0Repository, default is Undefined, required
        repository
    toPath : str, default is Undefined, optional
        ToPath specifies the path to copy contents to, defaults to the name of
        the GitRepositoryRef.
    """


    fromPath?: str

    repository: SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0Repository

    toPath?: str


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecIncludeItems0Repository:
    r"""
    GitRepositoryRef specifies the GitRepository which Artifact contents
    must be included.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecRef:
    r"""
    Reference specifies the Git reference to resolve and monitor for
    changes, defaults to the 'master' branch.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Branch to check out, defaults to 'master' if no other field is defined.
    commit : str, default is Undefined, optional
        Commit SHA to check out, takes precedence over all reference fields.

        This can be combined with Branch to shallow clone the branch, in which
        the commit is expected to exist.
    name : str, default is Undefined, optional
        Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

        It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
        Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
    semver : str, default is Undefined, optional
        SemVer tag expression to check out, takes precedence over Tag.
    tag : str, default is Undefined, optional
        Tag to check out, takes precedence over Branch.
    """


    branch?: str

    commit?: str

    name?: str

    semver?: str

    tag?: str


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecSecretRef:
    r"""
    SecretRef specifies the Secret containing authentication credentials for
    the GitRepository.
    For HTTPS repositories the Secret must contain 'username' and 'password'
    fields for basic auth or 'bearerToken' field for token auth.
    For SSH repositories the Secret must contain 'identity'
    and 'known_hosts' fields.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerify:
    r"""
    Verification specifies the configuration to verify the Git commit
    signature(s).

    Attributes
    ----------
    mode : str, default is Undefined, required
        Mode specifies what Git object should be verified, currently ('head').
    secretRef : SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerifySecretRef, default is Undefined, required
        secret ref
    """


    mode: "head"

    secretRef: SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerifySecretRef


schema SourceToolkitFluxcdIoV1beta2GitRepositorySpecVerifySecretRef:
    r"""
    SecretRef specifies the Secret containing the public keys of trusted Git
    authors.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatus:
    r"""
    GitRepositoryStatus records the observed state of a Git repository.

    Attributes
    ----------
    artifact : SourceToolkitFluxcdIoV1beta2GitRepositoryStatusArtifact, default is Undefined, optional
        artifact
    conditions : [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the GitRepository.
    contentConfigChecksum : str, default is Undefined, optional
        ContentConfigChecksum is a checksum of all the configurations related to
        the content of the source artifact:
         - .spec.ignore
         - .spec.recurseSubmodules
         - .spec.included and the checksum of the included artifacts
        observed in .status.observedGeneration version of the object. This can
        be used to determine if the content of the included repository has
        changed.
        It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.

        Deprecated: Replaced with explicit fields for observed artifact content
        config in the status.
    includedArtifacts : [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusIncludedArtifactsItems0], default is Undefined, optional
        IncludedArtifacts contains a list of the last successfully included
        Artifacts as instructed by GitRepositorySpec.Include.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation of the GitRepository
        object.
    observedIgnore : str, default is Undefined, optional
        ObservedIgnore is the observed exclusion patterns used for constructing
        the source artifact.
    observedInclude : [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0], default is Undefined, optional
        ObservedInclude is the observed list of GitRepository resources used to
        to produce the current Artifact.
    observedRecurseSubmodules : bool, default is Undefined, optional
        ObservedRecurseSubmodules is the observed resource submodules
        configuration used to produce the current Artifact.
    url : str, default is Undefined, optional
        URL is the dynamic fetch link for the latest Artifact.
        It is provided on a "best effort" basis, and using the precise
        GitRepositoryStatus.Artifact data is recommended.
    """


    artifact?: SourceToolkitFluxcdIoV1beta2GitRepositoryStatusArtifact

    conditions?: [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusConditionsItems0]

    contentConfigChecksum?: str

    includedArtifacts?: [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusIncludedArtifactsItems0]

    lastHandledReconcileAt?: str

    observedGeneration?: int

    observedIgnore?: str

    observedInclude?: [SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0]

    observedRecurseSubmodules?: bool

    url?: str


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatusArtifact:
    r"""
    Artifact represents the last successful GitRepository reconciliation.

    Attributes
    ----------
    digest : str, default is Undefined, required
        Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of the
        Artifact.
    metadata : {str:str}, default is Undefined, optional
        Metadata holds upstream information such as OCI annotations.
    path : str, default is Undefined, required
        Path is the relative file path of the Artifact. It can be used to locate
        the file in the root of the Artifact storage on the local file system of
        the controller managing the Source.
    revision : str, default is Undefined, required
        Revision is a human-readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
    size : int, default is Undefined, optional
        Size is the number of bytes in the file.
    url : str, default is Undefined, required
        URL is the HTTP address of the Artifact as exposed by the controller
        managing the Source. It can be used to retrieve the Artifact for
        consumption, e.g. by another controller applying the Artifact contents.
    """


    digest: str

    lastUpdateTime: str

    metadata?: {str:str}

    path: str

    revision: str

    size?: int

    url: str


    check:
        _regex_match(str(digest), r"^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$")


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatusIncludedArtifactsItems0:
    r"""
    Artifact represents the output of a Source reconciliation.

    Attributes
    ----------
    digest : str, default is Undefined, required
        Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of the
        Artifact.
    metadata : {str:str}, default is Undefined, optional
        Metadata holds upstream information such as OCI annotations.
    path : str, default is Undefined, required
        Path is the relative file path of the Artifact. It can be used to locate
        the file in the root of the Artifact storage on the local file system of
        the controller managing the Source.
    revision : str, default is Undefined, required
        Revision is a human-readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
    size : int, default is Undefined, optional
        Size is the number of bytes in the file.
    url : str, default is Undefined, required
        URL is the HTTP address of the Artifact as exposed by the controller
        managing the Source. It can be used to retrieve the Artifact for
        consumption, e.g. by another controller applying the Artifact contents.
    """


    digest: str

    lastUpdateTime: str

    metadata?: {str:str}

    path: str

    revision: str

    size?: int

    url: str


    check:
        _regex_match(str(digest), r"^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$")


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0:
    r"""
    GitRepositoryInclude specifies a local reference to a GitRepository which
    Artifact (sub-)contents must be included, and where they should be placed.

    Attributes
    ----------
    fromPath : str, default is Undefined, optional
        FromPath specifies the path to copy contents from, defaults to the root
        of the Artifact.
    repository : SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0Repository, default is Undefined, required
        repository
    toPath : str, default is Undefined, optional
        ToPath specifies the path to copy contents to, defaults to the name of
        the GitRepositoryRef.
    """


    fromPath?: str

    repository: SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0Repository

    toPath?: str


schema SourceToolkitFluxcdIoV1beta2GitRepositoryStatusObservedIncludeItems0Repository:
    r"""
    GitRepositoryRef specifies the GitRepository which Artifact contents
    must be included.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str
