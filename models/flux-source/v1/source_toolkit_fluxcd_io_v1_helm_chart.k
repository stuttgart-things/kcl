"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema HelmChart:
    r"""
    HelmChart is the Schema for the helmcharts API.

    Attributes
    ----------
    apiVersion : str, default is "source.toolkit.fluxcd.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HelmChart", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourceToolkitFluxcdIoV1HelmChartSpec, default is Undefined, optional
        spec
    status : SourceToolkitFluxcdIoV1HelmChartStatus, default is Undefined, optional
        status
    """


    apiVersion: "source.toolkit.fluxcd.io/v1" = "source.toolkit.fluxcd.io/v1"

    kind: "HelmChart" = "HelmChart"

    metadata?: v1.ObjectMeta

    spec?: SourceToolkitFluxcdIoV1HelmChartSpec

    status?: SourceToolkitFluxcdIoV1HelmChartStatus


schema SourceToolkitFluxcdIoV1HelmChartSpec:
    r"""
    HelmChartSpec specifies the desired state of a Helm chart.

    Attributes
    ----------
    chart : str, default is Undefined, required
        Chart is the name or path the Helm chart is available at in the
        SourceRef.
    ignoreMissingValuesFiles : bool, default is Undefined, optional
        IgnoreMissingValuesFiles controls whether to silently ignore missing values
        files rather than failing.
    interval : str, default is Undefined, required
        Interval at which the HelmChart SourceRef is checked for updates.
        This interval is approximate and may be subject to jitter to ensure
        efficient use of resources.
    reconcileStrategy : str, default is "ChartVersion", optional
        ReconcileStrategy determines what enables the creation of a new artifact.
        Valid values are ('ChartVersion', 'Revision').
        See the documentation of the values for an explanation on their behavior.
        Defaults to ChartVersion when omitted.
    sourceRef : SourceToolkitFluxcdIoV1HelmChartSpecSourceRef, default is Undefined, required
        source ref
    suspend : bool, default is Undefined, optional
        Suspend tells the controller to suspend the reconciliation of this
        source.
    valuesFiles : [str], default is Undefined, optional
        ValuesFiles is an alternative list of values files to use as the chart
        values (values.yaml is not included by default), expected to be a
        relative path in the SourceRef.
        Values files are merged in the order of this list with the last file
        overriding the first. Ignored when omitted.
    verify : SourceToolkitFluxcdIoV1HelmChartSpecVerify, default is Undefined, optional
        verify
    version : str, default is "*", optional
        Version is the chart version semver expression, ignored for charts from
        GitRepository and Bucket sources. Defaults to latest when omitted.
    """


    chart: str

    ignoreMissingValuesFiles?: bool

    interval: str

    reconcileStrategy?: "ChartVersion" | "Revision" = "ChartVersion"

    sourceRef: SourceToolkitFluxcdIoV1HelmChartSpecSourceRef

    suspend?: bool

    valuesFiles?: [str]

    verify?: SourceToolkitFluxcdIoV1HelmChartSpecVerify

    version?: str = "*"


    check:
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$")


schema SourceToolkitFluxcdIoV1HelmChartSpecSourceRef:
    r"""
    SourceRef is the reference to the Source the chart is available at.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion of the referent.
    kind : str, default is Undefined, required
        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
        'Bucket').
    name : str, default is Undefined, required
        Name of the referent.
    """


    apiVersion?: str

    kind: "HelmRepository" | "GitRepository" | "Bucket"

    name: str


schema SourceToolkitFluxcdIoV1HelmChartSpecVerify:
    r"""
    Verify contains the secret name containing the trusted public keys
    used to verify the signature and specifies which provider to use to check
    whether OCI image is authentic.
    This field is only supported when using HelmRepository source with spec.type 'oci'.
    Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.

    Attributes
    ----------
    matchOIDCIdentity : [SourceToolkitFluxcdIoV1HelmChartSpecVerifyMatchOIDCIdentityItems0], default is Undefined, optional
        MatchOIDCIdentity specifies the identity matching criteria to use
        while verifying an OCI artifact which was signed using Cosign keyless
        signing. The artifact's identity is deemed to be verified if any of the
        specified matchers match against the identity.
    provider : str, default is "cosign", required
        Provider specifies the technology used to sign the OCI Artifact.
    secretRef : SourceToolkitFluxcdIoV1HelmChartSpecVerifySecretRef, default is Undefined, optional
        secret ref
    """


    matchOIDCIdentity?: [SourceToolkitFluxcdIoV1HelmChartSpecVerifyMatchOIDCIdentityItems0]

    provider: "cosign" | "notation" = "cosign"

    secretRef?: SourceToolkitFluxcdIoV1HelmChartSpecVerifySecretRef


schema SourceToolkitFluxcdIoV1HelmChartSpecVerifyMatchOIDCIdentityItems0:
    r"""
    OIDCIdentityMatch specifies options for verifying the certificate identity,
    i.e. the issuer and the subject of the certificate.

    Attributes
    ----------
    issuer : str, default is Undefined, required
        Issuer specifies the regex pattern to match against to verify
        the OIDC issuer in the Fulcio certificate. The pattern must be a
        valid Go regular expression.
    subject : str, default is Undefined, required
        Subject specifies the regex pattern to match against to verify
        the identity subject in the Fulcio certificate. The pattern must
        be a valid Go regular expression.
    """


    issuer: str

    subject: str


schema SourceToolkitFluxcdIoV1HelmChartSpecVerifySecretRef:
    r"""
    SecretRef specifies the Kubernetes Secret containing the
    trusted public keys.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1HelmChartStatus:
    r"""
    HelmChartStatus records the observed state of the HelmChart.

    Attributes
    ----------
    artifact : SourceToolkitFluxcdIoV1HelmChartStatusArtifact, default is Undefined, optional
        artifact
    conditions : [SourceToolkitFluxcdIoV1HelmChartStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the HelmChart.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedChartName : str, default is Undefined, optional
        ObservedChartName is the last observed chart name as specified by the
        resolved chart reference.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation of the HelmChart
        object.
    observedSourceArtifactRevision : str, default is Undefined, optional
        ObservedSourceArtifactRevision is the last observed Artifact.Revision
        of the HelmChartSpec.SourceRef.
    observedValuesFiles : [str], default is Undefined, optional
        ObservedValuesFiles are the observed value files of the last successful
        reconciliation.
        It matches the chart in the last successfully reconciled artifact.
    url : str, default is Undefined, optional
        URL is the dynamic fetch link for the latest Artifact.
        It is provided on a "best effort" basis, and using the precise
        BucketStatus.Artifact data is recommended.
    """


    artifact?: SourceToolkitFluxcdIoV1HelmChartStatusArtifact

    conditions?: [SourceToolkitFluxcdIoV1HelmChartStatusConditionsItems0]

    lastHandledReconcileAt?: str

    observedChartName?: str

    observedGeneration?: int

    observedSourceArtifactRevision?: str

    observedValuesFiles?: [str]

    url?: str


schema SourceToolkitFluxcdIoV1HelmChartStatusArtifact:
    r"""
    Artifact represents the output of the last successful reconciliation.

    Attributes
    ----------
    digest : str, default is Undefined, required
        Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of the
        Artifact.
    metadata : {str:str}, default is Undefined, optional
        Metadata holds upstream information such as OCI annotations.
    path : str, default is Undefined, required
        Path is the relative file path of the Artifact. It can be used to locate
        the file in the root of the Artifact storage on the local file system of
        the controller managing the Source.
    revision : str, default is Undefined, required
        Revision is a human-readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
    size : int, default is Undefined, optional
        Size is the number of bytes in the file.
    url : str, default is Undefined, required
        URL is the HTTP address of the Artifact as exposed by the controller
        managing the Source. It can be used to retrieve the Artifact for
        consumption, e.g. by another controller applying the Artifact contents.
    """


    digest: str

    lastUpdateTime: str

    metadata?: {str:str}

    path: str

    revision: str

    size?: int

    url: str


    check:
        _regex_match(str(digest), r"^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$")


schema SourceToolkitFluxcdIoV1HelmChartStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")
