"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema HelmRepository:
    r"""
    HelmRepository is the Schema for the helmrepositories API.

    Attributes
    ----------
    apiVersion : str, default is "source.toolkit.fluxcd.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HelmRepository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourceToolkitFluxcdIoV1HelmRepositorySpec, default is Undefined, optional
        spec
    status : SourceToolkitFluxcdIoV1HelmRepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "source.toolkit.fluxcd.io/v1" = "source.toolkit.fluxcd.io/v1"

    kind: "HelmRepository" = "HelmRepository"

    metadata?: v1.ObjectMeta

    spec?: SourceToolkitFluxcdIoV1HelmRepositorySpec

    status?: SourceToolkitFluxcdIoV1HelmRepositoryStatus


schema SourceToolkitFluxcdIoV1HelmRepositorySpec:
    r"""
    HelmRepositorySpec specifies the required configuration to produce an
    Artifact for a Helm repository index YAML.

    Attributes
    ----------
    accessFrom : SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFrom, default is Undefined, optional
        access from
    certSecretRef : SourceToolkitFluxcdIoV1HelmRepositorySpecCertSecretRef, default is Undefined, optional
        cert secret ref
    insecure : bool, default is Undefined, optional
        Insecure allows connecting to a non-TLS HTTP container registry.
        This field is only taken into account if the .spec.type field is set to 'oci'.
    interval : str, default is Undefined, optional
        Interval at which the HelmRepository URL is checked for updates.
        This interval is approximate and may be subject to jitter to ensure
        efficient use of resources.
    passCredentials : bool, default is Undefined, optional
        PassCredentials allows the credentials from the SecretRef to be passed
        on to a host that does not match the host as defined in URL.
        This may be required if the host of the advertised chart URLs in the
        index differ from the defined URL.
        Enabling this should be done with caution, as it can potentially result
        in credentials getting stolen in a MITM-attack.
    provider : str, default is "generic", optional
        Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
        This field is optional, and only taken into account if the .spec.type field is set to 'oci'.
        When not specified, defaults to 'generic'.
    secretRef : SourceToolkitFluxcdIoV1HelmRepositorySpecSecretRef, default is Undefined, optional
        secret ref
    suspend : bool, default is Undefined, optional
        Suspend tells the controller to suspend the reconciliation of this
        HelmRepository.
    timeout : str, default is Undefined, optional
        Timeout is used for the index fetch operation for an HTTPS helm repository,
        and for remote OCI Repository operations like pulling for an OCI helm
        chart by the associated HelmChart.
        Its default value is 60s.
    $type : str, default is Undefined, optional
        Type of the HelmRepository.
        When this field is set to  "oci", the URL field value must be prefixed with "oci://".
    url : str, default is Undefined, required
        URL of the Helm repository, a valid URL contains at least a protocol and
        host.
    """


    accessFrom?: SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFrom

    certSecretRef?: SourceToolkitFluxcdIoV1HelmRepositorySpecCertSecretRef

    insecure?: bool

    interval?: str

    passCredentials?: bool

    provider?: "generic" | "aws" | "azure" | "gcp" = "generic"

    secretRef?: SourceToolkitFluxcdIoV1HelmRepositorySpecSecretRef

    suspend?: bool

    timeout?: str

    $type?: "default" | "oci"

    url: str


    check:
        _regex_match(str(interval), r"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$") if interval
        _regex_match(str(timeout), r"^([0-9]+(\.[0-9]+)?(ms|s|m))+$") if timeout
        _regex_match(str(url), r"^(http|https|oci)://.*$")


schema SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFrom:
    r"""
    AccessFrom specifies an Access Control List for allowing cross-namespace
    references to this object.
    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092

    Attributes
    ----------
    namespaceSelectors : [SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFromNamespaceSelectorsItems0], default is Undefined, required
        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
        Items in this list are evaluated using a logical OR operation.
    """


    namespaceSelectors: [SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFromNamespaceSelectorsItems0]


schema SourceToolkitFluxcdIoV1HelmRepositorySpecAccessFromNamespaceSelectorsItems0:
    r"""
    NamespaceSelector selects the namespaces to which this ACL applies.
    An empty map of MatchLabels matches all namespaces in a cluster.

    Attributes
    ----------
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchLabels?: {str:str}


schema SourceToolkitFluxcdIoV1HelmRepositorySpecCertSecretRef:
    r"""
    CertSecretRef can be given the name of a Secret containing
    either or both of

    - a PEM-encoded client certificate (`tls.crt`) and private
    key (`tls.key`);
    - a PEM-encoded CA certificate (`ca.crt`)

    and whichever are supplied, will be used for connecting to the
    registry. The client cert and key are useful if you are
    authenticating with a certificate; the CA cert is useful if
    you are using a self-signed server certificate. The Secret must
    be of type `Opaque` or `kubernetes.io/tls`.

    It takes precedence over the values specified in the Secret referred
    to by `.spec.secretRef`.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1HelmRepositorySpecSecretRef:
    r"""
    SecretRef specifies the Secret containing authentication credentials
    for the HelmRepository.
    For HTTP/S basic auth the secret must contain 'username' and 'password'
    fields.
    Support for TLS auth using the 'certFile' and 'keyFile', and/or 'caFile'
    keys is deprecated. Please use `.spec.certSecretRef` instead.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referent.
    """


    name: str


schema SourceToolkitFluxcdIoV1HelmRepositoryStatus:
    r"""
    HelmRepositoryStatus records the observed state of the HelmRepository.

    Attributes
    ----------
    artifact : SourceToolkitFluxcdIoV1HelmRepositoryStatusArtifact, default is Undefined, optional
        artifact
    conditions : [SourceToolkitFluxcdIoV1HelmRepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions holds the conditions for the HelmRepository.
    lastHandledReconcileAt : str, default is Undefined, optional
        LastHandledReconcileAt holds the value of the most recent
        reconcile request value, so a change of the annotation value
        can be detected.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the last observed generation of the HelmRepository
        object.
    url : str, default is Undefined, optional
        URL is the dynamic fetch link for the latest Artifact.
        It is provided on a "best effort" basis, and using the precise
        HelmRepositoryStatus.Artifact data is recommended.
    """


    artifact?: SourceToolkitFluxcdIoV1HelmRepositoryStatusArtifact

    conditions?: [SourceToolkitFluxcdIoV1HelmRepositoryStatusConditionsItems0]

    lastHandledReconcileAt?: str

    observedGeneration?: int

    url?: str


schema SourceToolkitFluxcdIoV1HelmRepositoryStatusArtifact:
    r"""
    Artifact represents the last successful HelmRepository reconciliation.

    Attributes
    ----------
    digest : str, default is Undefined, required
        Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
    lastUpdateTime : str, default is Undefined, required
        LastUpdateTime is the timestamp corresponding to the last update of the
        Artifact.
    metadata : {str:str}, default is Undefined, optional
        Metadata holds upstream information such as OCI annotations.
    path : str, default is Undefined, required
        Path is the relative file path of the Artifact. It can be used to locate
        the file in the root of the Artifact storage on the local file system of
        the controller managing the Source.
    revision : str, default is Undefined, required
        Revision is a human-readable identifier traceable in the origin source
        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
    size : int, default is Undefined, optional
        Size is the number of bytes in the file.
    url : str, default is Undefined, required
        URL is the HTTP address of the Artifact as exposed by the controller
        managing the Source. It can be used to retrieve the Artifact for
        consumption, e.g. by another controller applying the Artifact contents.
    """


    digest: str

    lastUpdateTime: str

    metadata?: {str:str}

    path: str

    revision: str

    size?: int

    url: str


    check:
        _regex_match(str(digest), r"^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$")


schema SourceToolkitFluxcdIoV1HelmRepositoryStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition.
        This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase.
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")
